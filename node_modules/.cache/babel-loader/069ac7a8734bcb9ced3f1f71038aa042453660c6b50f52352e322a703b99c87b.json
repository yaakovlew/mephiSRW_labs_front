{"ast":null,"code":"var _jsxFileName = \"/Users/yaakovlew/Desktop/mephi/back/8 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/mephisrw-labs-front/src/TaskBar.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBar = ({\n  activeTask\n}) => {\n  const tasks = [\"Задание\", \"Задание 1\", \"Задание 2\", \"Задание 3\", \"Задание 4\", \"Задание 5\", \"Задание 6\", \"Результат\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.taskBar,\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.taskItem,\n        backgroundColor: activeTask === task ? \"#4CAF50\" : \"#f1f1f1\"\n      },\n      children: task\n    }, task, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskBar;\nconst styles = {\n  taskBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"20px\",\n    padding: \"10px 0\",\n    borderBottom: \"2px solid #ccc\"\n  },\n  taskItem: {\n    flex: 1,\n    textAlign: \"center\",\n    padding: \"10px 0\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    transition: \"background-color 0.3s\"\n  }\n};\nexport default TaskBar;\nvar _c;\n$RefreshReg$(_c, \"TaskBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskBar","activeTask","tasks","style","styles","taskBar","children","map","task","taskItem","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","display","justifyContent","marginBottom","padding","borderBottom","flex","textAlign","borderRadius","cursor","fontWeight","transition","$RefreshReg$"],"sources":["/Users/yaakovlew/Desktop/mephi/back/8 семестр/Практика/mephisrw-labs-front/src/TaskBar.tsx"],"sourcesContent":["import React from \"react\";\n\ntype TaskBarProps = {\n  activeTask: string;\n};\n\nconst TaskBar: React.FC<TaskBarProps> = ({ activeTask }) => {\n  const tasks = [\n    \"Задание\",\n    \"Задание 1\",\n    \"Задание 2\",\n    \"Задание 3\",\n    \"Задание 4\",\n    \"Задание 5\",\n    \"Задание 6\",\n    \"Результат\",\n  ];\n\n  return (\n    <div style={styles.taskBar}>\n      {tasks.map((task) => (\n        <div\n          key={task}\n          style={{\n            ...styles.taskItem,\n            backgroundColor: activeTask === task ? \"#4CAF50\" : \"#f1f1f1\",\n          }}\n        >\n          {task}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst styles = {\n  taskBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"20px\",\n    padding: \"10px 0\",\n    borderBottom: \"2px solid #ccc\",\n  },\n  taskItem: {\n    flex: 1,\n    textAlign: \"center\",\n    padding: \"10px 0\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    transition: \"background-color 0.3s\",\n  },\n};\n\nexport default TaskBar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,OAA+B,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAC1D,MAAMC,KAAK,GAAG,CACZ,SAAS,EACT,WAAW,EACX,WAAW,EACX,WAAW,EACX,WAAW,EACX,WAAW,EACX,WAAW,EACX,WAAW,CACZ;EAED,oBACEH,OAAA;IAAKI,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAAC,QAAA,EACxBJ,KAAK,CAACK,GAAG,CAAEC,IAAI,iBACdT,OAAA;MAEEI,KAAK,EAAE;QACL,GAAGC,MAAM,CAACK,QAAQ;QAClBC,eAAe,EAAET,UAAU,KAAKO,IAAI,GAAG,SAAS,GAAG;MACrD,CAAE;MAAAF,QAAA,EAEDE;IAAI,GANAA,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAON,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA3BIf,OAA+B;AA6BrC,MAAMI,MAAM,GAAG;EACbC,OAAO,EAAE;IACPW,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,eAAe;IAC/BC,YAAY,EAAE,MAAM;IACpBC,OAAO,EAAE,QAAQ;IACjBC,YAAY,EAAE;EAChB,CAAC;EACDX,QAAQ,EAAE;IACRY,IAAI,EAAE,CAAC;IACPC,SAAS,EAAE,QAAQ;IACnBH,OAAO,EAAE,QAAQ;IACjBI,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,MAAM;IAClBC,UAAU,EAAE;EACd;AACF,CAAC;AAED,eAAe1B,OAAO;AAAC,IAAAe,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}