{"ast":null,"code":"var _jsxFileName = \"/Users/yaakovlew/Desktop/mephi/back/8 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/mephisrw-labs-front/src/Timer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const initialTime = 1.5 * 60 * 60; // 1.5 часа в секундах\n\n  // Получаем время окончания из localStorage или вычисляем заново\n  const savedEndTime = localStorage.getItem('endTime');\n  const currentTime = Math.floor(Date.now() / 1000); // Текущее время в секундах\n\n  // Если в localStorage нет времени окончания, начинаем отсчет с момента старта\n  const endTime = savedEndTime ? parseInt(savedEndTime) : currentTime + initialTime;\n\n  // Рассчитываем оставшееся время\n  const [timeRemaining, setTimeRemaining] = useState(endTime - currentTime);\n  useEffect(() => {\n    // Сохраняем время окончания в localStorage\n    localStorage.setItem('endTime', endTime);\n    const interval = setInterval(() => {\n      const currentTime = Math.floor(Date.now() / 1000);\n      const remaining = endTime - currentTime;\n      if (remaining <= 0) {\n        clearInterval(interval);\n        setTimeRemaining(0);\n        localStorage.removeItem('endTime'); // Удаляем время окончания, так как таймер завершен\n      } else {\n        setTimeRemaining(remaining);\n      }\n    }, 1000); // обновляем каждую секунду\n\n    // Очистка интервала при размонтировании компонента\n    return () => clearInterval(interval);\n  }, [endTime]);\n\n  // Преобразуем оставшееся время в формат чч:мм:сс\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.timer,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formatTime(timeRemaining)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n// Стили для таймера (позиционируем в левом верхнем углу)\n_s(Timer, \"+9zZBqxS9iSaTxIqvxNv3LH7sKs=\");\n_c = Timer;\nconst styles = {\n  timer: {\n    position: 'absolute',\n    top: '10px',\n    left: '10px',\n    fontSize: '24px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: '5px',\n    borderRadius: '5px'\n  }\n};\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","_s","initialTime","savedEndTime","localStorage","getItem","currentTime","Math","floor","Date","now","endTime","parseInt","timeRemaining","setTimeRemaining","setItem","interval","setInterval","remaining","clearInterval","removeItem","formatTime","seconds","hours","minutes","secs","String","padStart","style","styles","timer","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","position","top","left","fontSize","fontWeight","color","backgroundColor","padding","borderRadius","$RefreshReg$"],"sources":["/Users/yaakovlew/Desktop/mephi/back/8 семестр/Практика/mephisrw-labs-front/src/Timer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Timer = () => {\n  const initialTime = 1.5 * 60 * 60; // 1.5 часа в секундах\n\n  // Получаем время окончания из localStorage или вычисляем заново\n  const savedEndTime = localStorage.getItem('endTime');\n  const currentTime = Math.floor(Date.now() / 1000); // Текущее время в секундах\n\n  // Если в localStorage нет времени окончания, начинаем отсчет с момента старта\n  const endTime = savedEndTime\n    ? parseInt(savedEndTime)\n    : currentTime + initialTime;\n\n  // Рассчитываем оставшееся время\n  const [timeRemaining, setTimeRemaining] = useState(endTime - currentTime);\n\n  useEffect(() => {\n    // Сохраняем время окончания в localStorage\n    localStorage.setItem('endTime', endTime);\n\n    const interval = setInterval(() => {\n      const currentTime = Math.floor(Date.now() / 1000);\n      const remaining = endTime - currentTime;\n\n      if (remaining <= 0) {\n        clearInterval(interval);\n        setTimeRemaining(0);\n        localStorage.removeItem('endTime'); // Удаляем время окончания, так как таймер завершен\n      } else {\n        setTimeRemaining(remaining);\n      }\n    }, 1000); // обновляем каждую секунду\n\n    // Очистка интервала при размонтировании компонента\n    return () => clearInterval(interval);\n  }, [endTime]);\n\n  // Преобразуем оставшееся время в формат чч:мм:сс\n  const formatTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n\n    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;\n  };\n\n  return (\n    <div style={styles.timer}>\n      <p>{formatTime(timeRemaining)}</p>\n    </div>\n  );\n};\n\n// Стили для таймера (позиционируем в левом верхнем углу)\nconst styles = {\n  timer: {\n    position: 'absolute',\n    top: '10px',\n    left: '10px',\n    fontSize: '24px',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: '5px',\n    borderRadius: '5px',\n  }\n};\n\nexport default Timer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,WAAW,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;;EAEnC;EACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EACpD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMC,OAAO,GAAGR,YAAY,GACxBS,QAAQ,CAACT,YAAY,CAAC,GACtBG,WAAW,GAAGJ,WAAW;;EAE7B;EACA,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAACe,OAAO,GAAGL,WAAW,CAAC;EAEzET,SAAS,CAAC,MAAM;IACd;IACAO,YAAY,CAACW,OAAO,CAAC,SAAS,EAAEJ,OAAO,CAAC;IAExC,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMX,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;MACjD,MAAMQ,SAAS,GAAGP,OAAO,GAAGL,WAAW;MAEvC,IAAIY,SAAS,IAAI,CAAC,EAAE;QAClBC,aAAa,CAACH,QAAQ,CAAC;QACvBF,gBAAgB,CAAC,CAAC,CAAC;QACnBV,YAAY,CAACgB,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;MACtC,CAAC,MAAM;QACLN,gBAAgB,CAACI,SAAS,CAAC;MAC7B;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMU,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,KAAK,GAAGhB,IAAI,CAACC,KAAK,CAACc,OAAO,GAAG,IAAI,CAAC;IACxC,MAAME,OAAO,GAAGjB,IAAI,CAACC,KAAK,CAAEc,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;IACjD,MAAMG,IAAI,GAAGH,OAAO,GAAG,EAAE;IAEzB,OAAO,GAAGI,MAAM,CAACH,KAAK,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACD,IAAI,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACjH,CAAC;EAED,oBACE5B,OAAA;IAAK6B,KAAK,EAAEC,MAAM,CAACC,KAAM;IAAAC,QAAA,eACvBhC,OAAA;MAAAgC,QAAA,EAAIV,UAAU,CAACR,aAAa;IAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;;AAED;AAAAlC,EAAA,CApDMD,KAAK;AAAAoC,EAAA,GAALpC,KAAK;AAqDX,MAAM6B,MAAM,GAAG;EACbC,KAAK,EAAE;IACLO,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,MAAM;IACXC,IAAI,EAAE,MAAM;IACZC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,OAAO;IACdC,eAAe,EAAE,oBAAoB;IACrCC,OAAO,EAAE,KAAK;IACdC,YAAY,EAAE;EAChB;AACF,CAAC;AAED,eAAe7C,KAAK;AAAC,IAAAoC,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}